// Installateur Scriptable pour MonWidget
const WIDGET_URL = "https://raw.githubusercontent.com/UsernameYann/Sunflower-Land-Widget-for-iOS/main/SFL-widget%2BNotif.js";
const SCRIPT_NAME = "MonWidget (ne pas éditer)";
const GUIDE_URL = "https://usernameyann.github.io/Sunflower-Land-Widget-for-iOS/guide.html";

// Fonctions utilitaires
async function httpGetString(url) {
  let req = new Request(url);
  return await req.loadString();
}
async function promptText(title, placeholder) {
  let alert = new Alert();
  alert.title = title;
  alert.addTextField(placeholder, "");
  alert.addAction("OK");
  await alert.present();
  return alert.textFieldValue(0);
}
async function promptYesNo(title) {
  let alert = new Alert();
  alert.title = title;
  alert.addAction("Oui");
  alert.addAction("Non");
  return (await alert.present()) === 0;
}
function replacePlaceholders(code, farmId, enableNotifications) {
  code = code.replace(/const FARM_ID = "__FARM_ID__";/, `const FARM_ID = "${farmId}";`);
  code = code.replace(/const ENABLE_NOTIFICATIONS = __ENABLE_NOTIFICATIONS__;/, `const ENABLE_NOTIFICATIONS = ${enableNotifications};`);
  return code;
}
async function saveScript(code, name) {
  let fm = FileManager.iCloud();
  let dir = fm.documentsDirectory();
  let path = fm.joinPath(dir, name + ".js");
  fm.writeString(path, code);
}
function openGuide(url) {
  Safari.openInApp(url);
}

// Flow principal
(async () => {
  let code = await httpGetString(WIDGET_URL);
  let farmId = await promptText("Numéro de ferme", "ex: 1234");
  let enableNotifications = await promptYesNo("Activer les notifications ?");
  code = replacePlaceholders(code, farmId, enableNotifications);
  await saveScript(code, SCRIPT_NAME);
  openGuide(GUIDE_URL);
})();
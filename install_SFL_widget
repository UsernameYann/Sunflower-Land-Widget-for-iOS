// Installateur Scriptable pour MonWidget
const WIDGET_URL = "https://raw.githubusercontent.com/UsernameYann/Sunflower-Land-Widget-for-iOS/main/SFL-widget%2BNotif.js";
const SCRIPT_NAME = "SFL_widget";
const GUIDE_URL = "https://usernameyann.github.io/Sunflower-Land-Widget-for-iOS/guide.html";

// Fonctions utilitaires
async function httpGetString(url) {
  let req = new Request(url);
  return await req.loadString();
}
async function promptText(title, placeholder, defaultValue = "") {
  let alert = new Alert();
  alert.title = title;
  alert.addTextField(placeholder, defaultValue);
  alert.addAction("OK");
  await alert.present();
  return alert.textFieldValue(0);
}
async function promptYesNo(title, defaultValue = null) {
  let alert = new Alert();
  alert.title = title;
  alert.addAction("Yes");
  alert.addAction("No");
  // Si une valeur par défaut existe, la sélectionner automatiquement
  if (defaultValue !== null) {
    alert.preferredActionIndex = defaultValue ? 0 : 1;
  }
  return (await alert.present()) === 0;
}
function replacePlaceholders(code, farmId, enableNotifications) {
  code = code.replace(/const FARM_ID = "__FARM_ID__";/, `const FARM_ID = "${farmId}";`);
  code = code.replace(/const ENABLE_NOTIFICATIONS = __ENABLE_NOTIFICATIONS__;/, `const ENABLE_NOTIFICATIONS = ${enableNotifications};`);
  return code;
}
async function saveScript(code, name) {
  let fm = FileManager.iCloud();
  let dir = fm.documentsDirectory();
  let path = fm.joinPath(dir, name + ".js");
  fm.writeString(path, code);
}
function openGuide(url) {
  Safari.openInApp(url);
}

// Flow principal



(async () => {
  let fm = FileManager.iCloud();
  let dir = fm.documentsDirectory();
  let path = fm.joinPath(dir, SCRIPT_NAME + ".js");
  let isUpdate = fm.fileExists(path);
  let oldFarmId = "";
  let oldEnableNotifications = null;
  if (isUpdate) {
    let oldCode = fm.readString(path);
    let farmIdMatch = oldCode.match(/const FARM_ID = "([^"]*)";/);
    if (farmIdMatch) oldFarmId = farmIdMatch[1];
    let notifMatch = oldCode.match(/const ENABLE_NOTIFICATIONS = (true|false);/);
    if (notifMatch) oldEnableNotifications = notifMatch[1] === "true";
  }
  let code = await httpGetString(WIDGET_URL);
  let farmId = await promptText("Farm ID", "e.g.: 1234", oldFarmId);
  let enableNotifications = await promptYesNo("Enable notifications?", oldEnableNotifications);
  code = replacePlaceholders(code, farmId, enableNotifications);
  await saveScript(code, SCRIPT_NAME);
  if (isUpdate) {
    let alert = new Alert();
    alert.title = "Widget updated!";
    alert.message = "Your SFL_widget has been updated with the latest version.";
    alert.addAction("OK");
    await alert.present();
  } else {
    openGuide(GUIDE_URL);
  }
})();